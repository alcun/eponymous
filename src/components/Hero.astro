---
import HeroBadge from "./HeroBadge.astro";

---

<div class="hero">
  <!-- <div id="interactive-badge" class="badge">
    <div>Hello. My name is:</div>
    <div class="badge-span">Eponymous</div>
    <div>&nbsp;</div>
  </div> -->
  <HeroBadge/>
  <div class="hero-text">
    <h1>Full Stack web development</h1>
    <h3>Front end</h3>
    <h3>Back end end</h3>
    <h3>Full stack</h3>
  </div>
  <!-- Other hero content like title, description, etc. -->
</div>
<style>
  /* Style for the hero section */
  .hero {
    position: relative;
    width: 100%;

    height: 80vh; /* Full viewport height */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    background:; /* Your background choice *;
    /* Other styling */
  }
  .hero-text {
    width: 80%;
    display: flex;
    flex-direction: column;
    h1 {
      margin-bottom: 1rem;
    }
    h1, h3{
        margin: 0;
        padding: 0;
    }
  }

  /* Style for the badge */
  .badge {
    width: 35%;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    border-radius: 5px;
    /* position: absolute; */
    /* Initial styles for the badge */
    transition: all 0.5s ease; /* Smooth transition for changes */
    /* More styling */
    margin-bottom: 3rem;
    .badge-span {
      background-color: azure;
      text-align: center;
      width: 100%;
      color: black;
    }
  }
</style>
<script lang="ts">
  document.addEventListener("mousemove", (e) => {
    const badge = document.getElementById("interactive-badge");
    if (!badge) return;

    const badgeRect = badge.getBoundingClientRect();

    const x = e.clientX - badgeRect.left;
    const y = e.clientY - badgeRect.top;

    // Example: Change color based on cursor proximity
    if (Math.abs(x) < 100 && Math.abs(y) < 100) {
      badge.style.backgroundColor = "blue"; // Dynamic color when cursor is near
    } else {
      badge.style.backgroundColor = "red"; // Default color
    }
  });
</script>
  